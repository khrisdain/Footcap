name: Daily Commit
on:
  schedule:
    # Runs at 12:00 UTC (adjust as needed)
    - cron: '0 12 * * *'
  
  # Allow manual triggers from the Actions tab
  workflow_dispatch:

jobs:
  daily-commit:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          # Use full depth to avoid issues with history
          fetch-depth: 0
      
      - name: Setup Git identity
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"
      
      - name: Pull latest changes
        run: |
          # Pull the latest changes from the remote repository
          git pull origin main || (echo "Pull failed, attempting fetch and reset" && git fetch origin main && git reset --hard origin/main)
      
      - name: Create daily update
        run: |
          # Get date information
          DATE=$(date +"%Y-%m-%d")
          TIME=$(date +"%H:%M:%S")
          RANDOM_ID=$((1000 + $RANDOM % 9000))
          
          # Create file if it doesn't exist
          touch daily-update.txt
          
          # Update file with daily content
          echo "Daily update: $DATE $TIME #$RANDOM_ID" >> daily-update.txt
      
      - name: Commit and push changes
        run: |
          # Add modified files
          git add daily-update.txt
          
          # Check if there are changes to commit
          if git diff --staged --quiet; then
            echo "No changes to commit"
            exit 0
          fi
          
          # Create commit with today's date
          git commit -m "Daily update: $(date +"%Y-%m-%d")"
          
          # Try pushing with pull and rebase strategy in case of conflicts
          git pull --rebase origin main || git pull origin main
          
          # Try pushing up to 3 times with exponential backoff
          MAX_ATTEMPTS=3
          ATTEMPT=1
          until git push origin main || [ $ATTEMPT -gt $MAX_ATTEMPTS ]
          do
            echo "Push attempt $ATTEMPT failed, retrying in $((2**ATTEMPT)) seconds..."
            sleep $((2**ATTEMPT))
            # Pull again before retry to ensure we have latest changes
            git pull --rebase origin main || git pull origin main
            ATTEMPT=$((ATTEMPT+1))
          done
          
          if [ $ATTEMPT -gt $MAX_ATTEMPTS ]; then
            echo "Failed to push after $MAX_ATTEMPTS attempts. Manual intervention required."
            exit 1
          fi
        env:
          # Uses GitHub's automatically provided GITHUB_TOKEN
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
